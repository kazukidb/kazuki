<?xml version="1.0"?>
<!--

    Copyright 2014 Sunny Gleason and original author or authors

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.kazuki</groupId>
    <artifactId>kazuki-parent</artifactId>
    <version>0.6.0</version>
  </parent>
  <artifactId>kazuki-impl</artifactId>
  <name>${project.groupId}:${project.artifactId}</name>
  <packaging>bundle</packaging>

  <properties>
    <packageVersion.dir>io/kazuki/v0</packageVersion.dir>
    <packageVersion.package>io.kazuki.v0</packageVersion.package>
    <generatedSourcesDir>${project.build.directory}/generated-sources/replacer</generatedSourcesDir>
    <packageVersion.template.input>${basedir}/src/main/java/${packageVersion.dir}/PackageVersion.java.in</packageVersion.template.input>
    <packageVersion.template.output>${generatedSourcesDir}/${packageVersion.dir}/PackageVersion.java</packageVersion.template.output>
  </properties>
  <dependencies>
    <dependency>
      <groupId>io.kazuki</groupId>
      <artifactId>kazuki-api</artifactId>
    </dependency>
    <!-- SLF4J (required) -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Guava (required) -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <!-- Jackson (required) -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-smile</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <!-- Guice (required) -->
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <!-- Joda-Time (required) -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    <!-- JDBI (optional) -->
    <dependency>
      <groupId>org.jdbi</groupId>
      <artifactId>jdbi</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Airline (optional) -->
    <dependency>
      <groupId>io.airlift</groupId>
      <artifactId>airline</artifactId>
    </dependency>
    <!-- BoneCP (optional) -->
    <dependency>
      <groupId>com.jolbox</groupId>
      <artifactId>bonecp</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- ANTLR (optional) -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>stringtemplate</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- H2 Database (optional) -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- MsgPack (optional/experimental) -->
    <dependency>
      <groupId>org.msgpack</groupId>
      <artifactId>msgpack</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Kryo (optional/experimental) -->
    <dependency>
      <groupId>com.esotericsoftware.kryo</groupId>
      <artifactId>kryo</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- TestNG (test) -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.2</version>
        <executions>
          <execution>
            <id>process-packageVersion</id>
            <goals>
              <goal>replace</goal>
            </goals>
            <!--
             | We explicitly omit 'phase' here so child poms can opt in to
             | generating their PackageVersion.java file.
             |
             | If your child pom wants a PackageVersion.java file, define
             | the 'packageVersion.dir' and 'packageVersion.package' properties
             | and include the commented-out section in your child pom's plugin
             | for this execution ID.
            -->
            <phase>generate-sources</phase>
          </execution>
        </executions>
        <configuration>
          <ignoreErrors>true</ignoreErrors>
          <file>${packageVersion.template.input}</file>
          <outputFile>${packageVersion.template.output}</outputFile>
          <replacements>
            <replacement>
              <token>@package@</token>
              <value>${packageVersion.package}</value>
            </replacement>
            <replacement>
              <token>@projectversion@</token>
              <value>${project.version}</value>
            </replacement>
            <replacement>
              <token>@projectgroupid@</token>
              <value>${project.groupId}</value>
            </replacement>
            <replacement>
              <token>@projectartifactid@</token>
              <value>${project.artifactId}</value>
            </replacement>
          </replacements>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>add-generated-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${generatedSourcesDir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <configuration>
          <!-- merge with API bundle at runtime as fragment -->
          <excludeDependencies>kazuki-api</excludeDependencies>
          <instructions>
            <Fragment-Host>io.kazuki.api</Fragment-Host>
            <Export-Package>io.kazuki.*</Export-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
