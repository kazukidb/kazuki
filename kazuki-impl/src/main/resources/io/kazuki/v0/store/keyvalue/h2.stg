/**
 * Copyright 2014 the original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group sql;

h2_kv_create_table(kv_table_name) ::=<<
  create table "<kv_table_name>" (
    "_key_type"        smallint unsigned not null,
    "_key_id_hi"       bigint unsigned not null,
    "_key_id_lo"       bigint unsigned not null,
    "_created_dt"      int unsigned not null,
    "_updated_dt"      int unsigned not null,
    "_version"         bigint unsigned not null,
    "_schema_version"  bigint unsigned not null,
    "_is_deleted"      char(1) not null default 'N',
    "_format"          char(1) not null default 'S',
    "_compression"     char(1) not null default 'F',
    "_value"           varbinary not null,
    PRIMARY KEY("_key_type", "_key_id_hi", "_key_id_lo")
  )
>>

h2_kv_create_table_index(kv_table_name) ::=<<
  select 1
>>

h2_kv_create(kv_table_name) ::=<< 
  insert into "<kv_table_name>" ("_key_type", "_key_id_hi", "_key_id_lo", "_created_dt", "_updated_dt", "_version", "_schema_version", "_is_deleted", "_format", "_compression", "_value")
  values (:key_type, :key_id_hi, :key_id_lo, :created_dt, :created_dt, :version, :schema_version, 'N', 'S', 'F', :value)
>>

h2_kv_retrieve(kv_table_name) ::=<< 
  select "_key_type", "_key_id_hi", "_key_id_lo", "_created_dt", "_updated_dt", "_format", "_compression", "_version", "_schema_version", "_is_deleted", "_value"
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_key_id_hi"  = :key_id_hi
     and "_key_id_lo"  = :key_id_lo
     and "_is_deleted" = 'N'
>>

h2_kv_update(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_key_type"        = :key_type,
        "_key_id_hi"       = :key_id_hi,
        "_key_id_lo"       = :key_id_lo,
        "_updated_dt"      = :updated_dt,
        "_version"         = "_version" + 1,
        "_schema_version"  = :schema_version,
        "_value"           = :value
   where "_key_type"       = :key_type
     and "_key_id_hi"      = :key_id_hi
     and "_key_id_lo"      = :key_id_lo
     and "_is_deleted"     = 'N'
>>

h2_kv_update_versioned(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_key_type"        = :key_type,
        "_key_id_hi"       = :key_id_hi,
        "_key_id_lo"       = :key_id_lo,
        "_updated_dt"      = :updated_dt,
        "_version"         = :new_version,
        "_schema_version"  = :schema_version,
        "_value"           = :value
   where "_key_type"       = :key_type
     and "_key_id_hi"      = :key_id_hi
     and "_key_id_lo"      = :key_id_lo
     and "_is_deleted"     = 'N'
     and "_version"        = :old_version
>>

h2_kv_delete(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_updated_dt" = :updated_dt,
        "_is_deleted" = 'Y'
   where "_key_type" = :key_type
     and "_key_id_hi"  = :key_id_hi
     and "_key_id_lo"  = :key_id_lo
>>

h2_kv_delete_versioned(kv_table_name) ::=<< 
  update "<kv_table_name>"
    set "_updated_dt" = :updated_dt,
        "_is_deleted" = 'Y'
   where "_key_type" = :key_type
     and "_key_id_hi"  = :key_id_hi
     and "_key_id_lo"  = :key_id_lo
     and "_version"    = :old_version
>>

h2_kv_delete_hard(kv_table_name) ::=<< 
  delete
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_key_id_hi"  = :key_id_hi
     and "_key_id_lo"  = :key_id_lo
>>

h2_kv_delete_hard_versioned(kv_table_name) ::=<< 
  delete
    from "<kv_table_name>"
   where "_key_type" = :key_type
     and "_key_id_hi"  = :key_id_hi
     and "_key_id_lo"  = :key_id_lo
     and "_version"    = :old_version
>>

h2_kv_key_ids_of_type(kv_table_name, order) ::=<< 
   select "_key_id_lo", "_version", "_schema_version"
     from "<kv_table_name>"
    where "_key_type" = :key_type
      and "_is_deleted" = 'N'
 order by "_key_id_lo" <order>
    limit :limit
   offset :offset
>>

h2_kv_key_values_of_type(kv_table_name, order) ::=<< 
   select "_key_id_lo", "_version", "_schema_version", "_value"
     from "<kv_table_name>"
    where "_key_type" = :key_type
      and "_is_deleted" = 'N'
 order by "_key_id_lo" <order>
    limit :limit
   offset :offset
>>

h2_kv_clear_type(kv_table_name) ::=<< 
  delete
    from "<kv_table_name>"
   where "_key_type" = :key_type
>>

h2_kv_truncate(kv_table_name) ::=<< 
  truncate table "<kv_table_name>"
>>

h2_kv_reset(kv_table_name) ::=<< 
  delete from "<kv_table_name>" where "_key_type" > 1
>>

h2_kv_destroy(kv_table_name) ::=<< 
  drop table "<kv_table_name>"
>>

h2_drop_index(table_name, index_name) ::=<< 
  drop index <index_name>
>>
